O que foi feito:
- migrar o banco de dados de uma sub-rede publica para uma sub-rede privada
- criar uma instancia do RDS usando CLI
- criar componentes de infraestrutura para o RDS: grupo de segurança, sub-rede privada 1, sub-rede privada 2, 
    grupo de sub-rede para o banco de dados, 
- [aws configure] = configurar a conta para trabalhar por linha de comando
- criar um backup do banco de dados e restaura-lo no RDS = [ mysql dump ]
- criar um teste de imigração
----------------------------------------------------------------------------------------------------------
details -> [show] -> copiar todas as informações que estão em baixo -> colar num bloco de notas -> copiar os 
numeros + [/cafe] do [CafeInstanceURL] e colar numa nova aba do navegador -> se não der certo, tente tirar o [S]
de [HTTPS] -> no site do café, ir em [menu] -> fazer o pedido de um item -> abaixar a tela -> [submit order] ->
criar uma instancia do RDS usando CLI -> console aws -> procurar por [ec2] -> [instancia(em execução)] -> 
selecionar a caixinha da instancia [CLI Host] -> la em cima -> [conectar] -> abaixar a tela -> [conectar] -> 
entrando na instancia EC2 por CLI -> [ aws configure ] -> <access key> -> <secret key> -> <labRegion> -> 
[ json ] -> criar componentes de infraestrutura para o RDS -> criação do grupo de segurança com regra de 
entrada que so permite solicitações MySQL ->

aws ec2 create-security-group \
--group-name CafeDatabaseSG \
--description "Security group for Cafe database" \
--vpc-id <numero CafeVpcID>

-> copiar o [ GroupID ] todo, até o nome -> criar a regra de entrada para o grupo de segurança -> 

aws ec2 authorize-security-group-ingress \
--group-id <GroupID copiado do CLI> \
--protocol tcp --port 3306 \
--source-group <CafeSecurityGroupID copiado do lab>

-> verificando se o grupo de segurança foi criado de forma correta -> 

aws ec2 describe-security-groups \
--query "SecurityGroups[*].[GroupName,GroupId,IpPermissions]" \
--filters "Name=group-name,Values='CafeDatabaseSG'"

-> exibirá a descrição do que foi criado -> .. [FromPort]:3306, [groupID], [userID], .. -> criando as 2 
subredes privadas -> 

Cafe VPC IPv4 CIDR block: 10.200.0.0/20
Cafe Public Subnet 1 IPv4 CIDR block: 10.200.0.0/24

-> 

aws ec2 create-subnet \
--vpc-id <CafeVpcID copiado do lab> \
--cidr-block 10.200.2.0/23 \
--availability-zone <CafeInstanceAZ copiado do lab>

-> copiar toda a linha que tem [SubnetID] (de baixo para cima = linha 4)-> colar num bloco de notas -> 

aws ec2 create-subnet \
--vpc-id <CafeVpcID o memso do anterior> \
--cidr-block 10.200.10.0/23 \
--availability-zone <CafeInstanceAZ copiado do lab - substituir o final de [a] para [b]>

-> copiar toda a linha que tem [SubnetID] (de baixo para cima = linha 4)-> colar num bloco de notas -> 

aws rds create-db-subnet-group \
--db-subnet-group-name "CafeDB Subnet Group" \
--db-subnet-group-description "DB subnet group for Cafe" \
--subnet-ids <SubnetID 1 copiada da CLI> <SubnetID 2 copiada da CLI> \
--tags "Key=Name,Value= CafeDatabaseSubnetGroup"

-> exibirá informações do RDS e de que esta ativada -> criando a instancia do bando de dados ->

aws rds create-db-instance \
--db-instance-identifier CafeDBInstance \
--engine mariadb \
--engine-version 11.4.5 \
--db-instance-class db.t3.micro \
--allocated-storage 20 \
--availability-zone <CafeInstanceAZ - final [2a]> \
--db-subnet-group-name "CafeDB Subnet Group" \
--vpc-security-group-ids <GroupID (sg) que foi copiado da CLI la no começo> \
--no-publicly-accessible \
--master-username root --master-user-password 'Re:Start!9'

-> será exibido todos os dados do banco de dados -> o banco de dados tem um tempo de 10 minutos ate ficar 
disponivel -> comando para monitorar o banco de dados e exibir se ele foi criado, … -> 

aws rds describe-db-instances \
--db-instance-identifier CafeDBInstance \
--query "DBInstances[*].[Endpoint.Address,AvailabilityZone,PreferredBackupWindow,BackupRetentionPeriod,DBInstanceStatus]"

-> verificar e esperar até que o banco de dados RDS seja criado -> deverá aparecer a mensagem [ available ] -> 
copiar toda a primeira linha [ “cafedbinstance…” ] e colar num bloco de notas -> migrando o banco de dados da 
instancia para o RDS -> voltar para a aba da console aws -> ir na instancia do EC2 -> marcar a caixinha do 
[ Cafeinstance ] -> la em cima -> [ conectar ] -> [ conectar ] -> [ aws configure ] -> access key: < chave 
copiada do da parte [show] > -> secrety key: < chave copiada da parte [show] > -> region: [ us-west-2 ] -> 
output: [ json ] -> comando que fara o backup da instancia que esta no CafeDB -> 

mysqldump --user=root --password='Re:Start!9' \
--databases cafe_db --add-drop-database > cafedb-backup.sql

-> revisar o conteudo do backup -> [ less cafedb-backup.sql ] -> no final tem que estar [ dump completed ] -> 
pressionar a tecla [ q ] para voltar a linha de comando -> conectando ao banco de dados: ->

mysql --user=root --password='Re:Start!9' \
--host=<colar o endereço copiado - “cafedbinstance…” - sem as aspas> \
< cafedb-backup.sql

-> conectando à instancia do banco de dados e entrando na Maria DB -> 

mysql --user=root --password='Re:Start!9' \
--host=<colar o endereço copiado - “cafedbinstance…” - sem as aspas> \
cafe_db

-> [ select * from product; ] -> será exibido todos os pedidos que foram feitos no  site do café no início -> 
a consulta foi feita -> digitar [ exit ] para sair do banco de dados e voltar para a linha de comando -> o 
banco de dados ja foi migrado para a sub-rede privada -> voltando ao console aws -> pesquisar por 
[ System Manager ] -> painel lateral esquerdo -> [ ferramentas de aplicação ] -> [ armazem de parametros ] -> 
procurar por [ /cafe/dbUrl ] -> clicar no nome -> ir em [ editar ] -> na caixa de dialogo de [valor] -> 
substituir pelo endereço copiado - “cafedbinstance…” - sem as aspas -> o valor anterior estava apontando para 
o endereço público da EC2 - agora apontará para o banco de dados que está na sub-rede privada -> salvar 
alterações -> copiar o CafeInstanceURL que foi copiado do [show] e colar numa nova aba do navegador para ver 
se esta ativada -> deu certo porque ja está apontada para o banco de dados -> console da aws -> pesquisar por 
[ RDS ] -> painel lateral esquerdo -> [banco de dados] -> clicar no nome [cafeinstance] -> aba [monitoramento]
-> visualizando as métricas do banco de dados 
